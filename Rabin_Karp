Given a string S and a pattern P of lowercase characters. The task is to check if the pattern is present in string or not.

Example 1:

Input:
S = aabaacaadaabaaba
P = aaba
Output: Yes
Explanation: You can find the patter at
starting at index 12.
Example 2:

Input:
S = aabaacaadaabaaba
P = asdfa
Output: No
Explanation: Pattern doesn't exist in
the given string S.

//this is simple don't miss


bool search(string pat, string txt, int q) 
{ 
	// Your code here

  
   
   int n=txt.length();
   int m=pat.length();
   int i,j,h=1,p=0,t=0;
   for(i=0;i<m-1;i++)
   {
       h=(h*d)%q;
   }
   for(int i=0;i<m;i++)
   {
       p=(d*p+pat[i])%q;
       t=(d*t+txt[i])%q;
   }
	
   for(int i=0;i<=n-m;i++)
   {
       if(p==t)
       {
           for(j=0;j<m;j++)
           {
               if(pat[j]!=txt[i+j])
               {
                   break;
               }
           }
           if(j==m)
           {
               return true;
           }
       }
       if(i<n-m)
       {
           t=(d*(t-txt[i]*h)+txt[i+m])%q;
           if(t<0)
           {
               t=t+q;
           }
       }
   }
   return false;
   }
